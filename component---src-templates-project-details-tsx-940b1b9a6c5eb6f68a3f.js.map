{"version":3,"file":"component---src-templates-project-details-tsx-940b1b9a6c5eb6f68a3f.js","mappings":"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","sources":["webpack://icelam.github.io/./src/data/techStack.ts","webpack://icelam.github.io/./src/templates/projectDetails.tsx"],"sourcesContent":["export default {\n  reactjs: {\n    bgColor: '#61dafb',\n    textColor: '#ffffff',\n    text: 'ReactJS',\n  },\n  styledcomponent: {\n    bgColor: '#db7093',\n    textColor: '#ffffff',\n    text: 'Styled component',\n  },\n  pwa: {\n    bgColor: '#580ec3',\n    textColor: '#ffffff',\n    text: 'PWA',\n  },\n  nodejs: {\n    bgColor: '#43853d',\n    textColor: '#ffffff',\n    text: 'Node.js',\n  },\n  express: {\n    bgColor: '#259dff',\n    textColor: '#ffffff',\n    text: 'express',\n  },\n  redux: {\n    bgColor: '#764abc',\n    textColor: '#ffffff',\n    text: 'Redux',\n  },\n  css3: {\n    bgColor: '#1a70b5',\n    textColor: '#ffffff',\n    text: 'CSS3',\n  },\n  vuejs: {\n    bgColor: '#4fc08d',\n    textColor: '#ffffff',\n    text: 'Vue.js',\n  },\n  webpack: {\n    bgColor: '#62b1d8',\n    textColor: '#ffffff',\n    text: 'Webpack',\n  },\n  javascript: {\n    bgColor: '#fbc700',\n    textColor: '#ffffff',\n    text: 'JavaScript',\n  },\n  html: {\n    bgColor: '#de4b25',\n    textColor: '#ffffff',\n    text: 'HTML',\n  },\n  animation: {\n    bgColor: '#666666',\n    textColor: '#ffffff',\n    text: 'Animation',\n  },\n  materialui: {\n    bgColor: '#1976d2',\n    textColor: '#ffffff',\n    text: 'Material-UI',\n  },\n  workbox: {\n    bgColor: '#fb8c00',\n    textColor: '#ffffff',\n    text: 'Workbox',\n  },\n  d3js: {\n    bgColor: '#f9a03c',\n    textColor: '#ffffff',\n    text: 'D3.js',\n  },\n  php: {\n    bgColor: '#4f5b93',\n    textColor: '#ffffff',\n    text: 'PHP',\n  },\n  graphql: {\n    bgColor: '#d64292',\n    textColor: '#ffffff',\n    text: 'GraphQL',\n  },\n  pug: {\n    bgColor: '#a86454',\n    textColor: '#ffffff',\n    text: 'Pug',\n  },\n  gulp: {\n    bgColor: '#cf4647',\n    textColor: '#ffffff',\n    text: 'gulp.js',\n  },\n  webextension: {\n    bgColor: '#1b367a',\n    textColor: '#ffffff',\n    text: 'Web Extension',\n  },\n  matterjs: {\n    bgColor: '#f55f5e',\n    textColor: '#ffffff',\n    text: 'matter.js',\n  },\n  jest: {\n    bgColor: '#15c213',\n    textColor: '#ffffff',\n    text: 'Jest',\n  },\n  storybook: {\n    bgColor: '#ff4785',\n    textColor: '#ffffff',\n    text: 'Storybook',\n  },\n  enzyme: {\n    bgColor: '#ff385c',\n    textColor: '#ffffff',\n    text: 'Enzyme',\n  },\n  esdoc: {\n    bgColor: '#e55151',\n    textColor: '#ffffff',\n    text: 'ESDoc',\n  },\n  typescript: {\n    bgColor: '#3178c6',\n    textColor: '#ffffff',\n    text: 'TypeScript',\n  },\n  deno: {\n    bgColor: '#888888',\n    textColor: '#ffffff',\n    text: 'Deno',\n  },\n  electron: {\n    bgColor: '#74b1b2',\n    textColor: '#ffffff',\n    text: 'Electron',\n  },\n  litelement: {\n    bgColor: '#2196f3',\n    textColor: '#ffffff',\n    text: 'LitElement',\n  },\n  webAnimations: {\n    bgColor: '#304a6b',\n    textColor: '#ffffff',\n    text: 'Web Animations API',\n  },\n  webAudio: {\n    bgColor: '#e9562f',\n    textColor: '#ffffff',\n    text: 'Web Audio API',\n  },\n  python: {\n    bgColor: '#3776ab',\n    textColor: '#ffffff',\n    text: 'Python',\n  },\n  serverless: {\n    bgColor: '#fd5750',\n    textColor: '#ffffff',\n    text: 'Serverless Framework',\n  },\n  lambda: {\n    bgColor: '#d16311',\n    textColor: '#ffffff',\n    text: 'AWS Lambda',\n  },\n};\n","import type { FC } from 'react';\nimport { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { graphql } from 'gatsby';\nimport { withCommonLayout } from '../hoc';\nimport { bulletListStyle } from '../styles';\nimport { BorderedImage, Tag } from '../components';\nimport techStackData from '../data/techStack';\nimport { PageProps } from '../types';\n\ntype TechStack = keyof typeof techStackData;\n\ninterface Post {\n  frontmatter: {\n    projectId: string;\n    projectName: string;\n    projectNameTranslation?: string;\n    projectLinks: string[];\n    projectDate: string;\n    githubLink: string;\n    techStack: TechStack[];\n    screenshots: {\n      childImageSharp: {\n        gatsbyImageData: {\n          layout: string;\n          backgroundColor: string;\n          images: {\n            fallback: {\n              src: string;\n              srcSet: string;\n              sizes: string;\n            };\n            sources: {\n              srcSet: string;\n              type: string;\n              sizes: string;\n            }[]\n          };\n          width: number;\n          height: number;\n        };\n      };\n      // For handling GIFs\n      // https://github.com/gatsbyjs/gatsby/issues/18699\n      publicURL: string;\n    }[];\n  };\n  html: string;\n}\n\nexport interface ProjectDetailsPageData {\n  markdownRemark: Post;\n}\n\nconst ProjectDeatils = styled.div`\n  ${bulletListStyle}\n`;\n\nconst ProjectTitle = styled.h1`\n  margin-bottom: 0.5625rem;\n`;\n\nconst ProjectInfo = styled.div`\n  margin: 1.6875rem 0;\n  font-size: 0.875rem;\n  line-height: 1.312m5re;\n  color: ${(props) => props.theme.secondaryTextColor};\n\n  & > div {\n    margin: 0 0 0.25rem 0;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n\n    &:last-of-type {\n      margin: 0;\n    }\n\n    img {\n      width: 1rem;\n      height: 1rem;\n      min-width: 1rem;\n      max-height: 1rem;\n      vertical-align: middle;\n      margin-right: 0.5rem;\n      image-rendering: -webkit-optimize-contrast;\n    }\n\n    a, span {\n      vertical-align: middle;\n      line-height: 1rem;\n      word-break: break-all;\n    }\n\n    a:first-child {\n      margin-left 24px;\n    }\n  }\n`;\n\nconst ProjectDescription = styled.p`\n  ol, ul {\n    margin-top: 0.5625rem;\n  }\n`;\n\n// Template for markdown contents\n// Docs: https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages\nconst ProjectDetailsPage: FC<PageProps<ProjectDetailsPageData>> = ({ data }) => {\n  const { iconProjectLink, iconGithubLink, iconDate } = useContext(ThemeContext);\n\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: {\n        projectName,\n        projectNameTranslation,\n        projectLinks,\n        projectDate,\n        githubLink,\n        techStack,\n        screenshots,\n      },\n    },\n  } = (data ?? {});\n\n  return (\n    <ProjectDeatils>\n      <ProjectTitle>\n        {projectName}\n        {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n        {projectNameTranslation && (<>{' '}({projectNameTranslation})</>)}\n      </ProjectTitle>\n\n      {\n        techStack.map((techName) => (\n          <Tag\n            bgColor={techStackData[techName].bgColor}\n            textColor={techStackData[techName].textColor}\n            key={techStackData[techName].text}\n          >\n            {techStackData[techName].text}\n          </Tag>\n        ))\n      }\n\n      <ProjectInfo>\n        {projectDate && (\n          <div>\n            <img src={iconDate} alt=\"Project date\" />\n            <span>{new Intl.DateTimeFormat('en-GB', { dateStyle: 'full' }).format(new Date(projectDate))}</span>\n          </div>\n        )}\n\n        {(projectLinks && Array.isArray(projectLinks)) && (\n          projectLinks.map((link, index) => (\n            <div key={link}>\n              {index === 0 ? <img src={iconProjectLink} alt=\"Project Link\" /> : null }\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{link}</a>\n            </div>\n          ))\n        )}\n\n        {githubLink && (\n          <div>\n            <img src={iconGithubLink} alt=\"GitHub Link\" />\n            <a href={githubLink} target=\"_blank\" rel=\"noopener noreferrer\">{githubLink}</a>\n          </div>\n        )}\n      </ProjectInfo>\n\n      <ProjectDescription dangerouslySetInnerHTML={{ __html: html }} />\n\n      <br />\n\n      {\n        screenshots.map(({\n          childImageSharp,\n          publicURL,\n        }) => (\n          <a\n            href={childImageSharp?.gatsbyImageData.images.fallback.src ?? publicURL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={childImageSharp?.gatsbyImageData.images.fallback.src ?? publicURL}\n          >\n            <BorderedImage\n              src={childImageSharp?.gatsbyImageData.images.fallback.src ?? publicURL}\n              srcSet={childImageSharp?.gatsbyImageData.images.fallback.srcSet}\n              sizes={childImageSharp?.gatsbyImageData.images.fallback.sizes}\n              alt={projectName}\n            />\n          </a>\n        ))\n      }\n    </ProjectDeatils>\n  );\n};\n\nexport default withCommonLayout(ProjectDetailsPage);\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(\n      fields: {collection: {eq: \"projects\"}}\n      id: {eq: $id}\n    ) {\n      frontmatter {\n        projectId\n        projectName\n        projectNameTranslation\n        projectLinks\n        projectDate\n        githubLink\n        techStack\n        screenshots {\n          childImageSharp {\n            gatsbyImageData(\n              layout: FULL_WIDTH\n              quality: 100\n            )\n          }\n          publicURL\n        }\n      }\n      html\n    }\n  }\n`;\n"],"names":["reactjs","bgColor","textColor","text","styledcomponent","pwa","nodejs","express","redux","css3","vuejs","webpack","javascript","html","animation","materialui","workbox","d3js","php","graphql","pug","gulp","webextension","matterjs","jest","storybook","enzyme","esdoc","typescript","deno","electron","litelement","webAnimations","webAudio","python","serverless","lambda","ProjectDeatils","styled","bulletListStyle","ProjectTitle","ProjectInfo","props","theme","secondaryTextColor","ProjectDescription","withCommonLayout","data","useContext","ThemeContext","iconProjectLink","iconGithubLink","iconDate","markdownRemark","frontmatter","projectName","projectNameTranslation","projectLinks","projectDate","githubLink","techStack","screenshots","_jsxs","map","techName","_jsx","Tag","techStackData","src","alt","Intl","DateTimeFormat","dateStyle","format","Date","Array","isArray","link","index","href","target","rel","dangerouslySetInnerHTML","__html","childImageSharp","publicURL","gatsbyImageData","images","fallback","BorderedImage","srcSet","sizes"],"sourceRoot":""}